name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build da imagem Docker
        run: |
          docker build -t minha-pagina-nginx -f docker/Dockerfile .

      # Exemplo de teste simples: verifica se o arquivo HTML existe
      - name: Teste de existência do index.html
        run: |
          test -f app/index.html

      # Exemplo de uso de secret (simulado)
      - name: Exemplo de uso de secret
        run: echo "O segredo é ${{ secrets.MINHA_VARIAVEL_SECRETA }}"
        env:
          MINHA_VARIAVEL_SECRETA: ${{ secrets.MINHA_VARIAVEL_SECRETA }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar kubectl e Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          sudo apt-get update && sudo apt-get install -y conntrack
          minikube start --driver=docker

      - name: Build e push da imagem Docker
        run: |
          eval $(minikube docker-env)
          docker build -t minha-pagina-nginx -f docker/Dockerfile .

      - name: Aplicar manifests Kubernetes
        run: |
          kubectl apply -f infra/kubernetes/secret.yaml
          kubectl apply -f infra/kubernetes/volume.yaml
          kubectl apply -f infra/kubernetes/deployment.yaml
          kubectl apply -f infra/kubernetes/service.yaml
